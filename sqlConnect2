var express = require('express')
const ADODB = require('node-adodb');
const connection = ADODB.open(' Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\\Users\\Jerry\\Documents\\javascript\\tpp\\TPP.accdb;Persist Security Info=False;');
var app = express()

app.use(express.static('www'));


app.get('/', function(req, res) {
	console.log();
	console.log('ajax is connecting');
	
	
	res.end();
});	
	
app.get("/insert",function(req,res){	
	
	
	var sql = new SQLConnect(connection);
	var json = { monday:"1212",tuesday:"000011111222",wednesday:"-1-1-1222323244",thursday:"",friday:""};
	var table = "main_schedule"
	
	
	var result = sql.sqlInsertTable(json, table);
	console.log(result);
	var rs = sql.sendQuery(result).then(data => {
		console.log(data);
		res.send(data);
		res.end();
		}).catch(error => {
			console.error(error);
			res.end();
		});
	
});

app.get("/query",function(req,res){	
	
	
	var sql = new SQLConnect(connection);
	var json = { fields:[],tables :[],where:[]};
	
	
	var result = sql.generateQuery(json);
	console.log(result);
	var rs = sql.sendQuery(result).then(data => {
		console.log(data);
		res.send(data);
		res.end();
		}).catch(error => {
			console.error(error);
			res.end();
		});
	
});

// starts the server listening on port 8080 localhost
var server = app.listen(8080, function () {

    var host = server.address().address
    var port = server.address().port

    console.log('Express app listening at http://%s:%s', host, port)

});





class SQLConnect{
	
	constructor(connection) {
		this.connection =connection;
	}
	
	
	sendQuery(statment){
		connection.query(statement).then(data => {
			console.log("success");
			return data;
		}).catch(error => {
			console.error(error);
		});
	}
	
	sendExecute(statement){
		var data = connection.execute(statement).then(data => {
			console.log("success");
			return data;
		}).catch(error => {
			console.error(error);
		});
		return data;
	}
	
	//not complete
	generateQuery(Json){
		// fields:[],tables :[],wheres:[]
		var fields = Json.fields;
		var tables = Json.tables;
		var wheres = Json.wheres;
		var statement = "select ";
		//fields
		for(var i=0; i<fields.length; i++){
			if(i == fields.length-1){
				statement += fields[i] + "\n from";
				break;
			}
			statement += fields[i] + ",";
		}
		for(var i=0; i<tables.length; i++){
			if(i == tables.length-1){
				statement += tables[i] + "\n ";
				break;
			}
			statement += tabl[i] + ",";
		}
		
		
	}
	
	sqlInsertTable(jsonObj, tableName){
		
		switch(tableName){
			case "users":
				var data = this.userdata(jsonObj);
				return data;
				break;
			case "commitments":
				var data = this.commitmentsdata(jsonObj);
				return data;
				break;
			case "main_schedule":
				var data = this.mainScheduledata(jsonObj);
				return data;
				break;
			
			
		}
		//other stuff
	}
	
	userdata(Json){
		// Json format 
		//first_name: "" , last_name: "", pathway:true/false,status:"",program:"",main_id:#
		var arrayColumns = Object.keys(Json);
		var arrayValues = Object.values(Json);
		var statement = "insert into users ("
		for(var i = 0; i<arrayColumns.length;i++){
			if(i == arrayColumns.length-1)
			{
				statement +=arrayColumns[i]+ ") values (";
				break;
			}
			statement += arrayColumns[i] + ", ";
		}
		for(var i = 0; i<arrayValues.length;i++){
			switch(i){
				case arrayValues.length-1:
					statement += arrayValues[i]+ ");";
					break;
				case 2:
					statement+= arrayValues[i]+ ", "
					break;
				default:
					statement+= "'"+arrayValues[i]+"'" + ", ";
					break;
			}
		}
		return statement;
	}
	
	commitmentsdata(Json){
		// Json format 
		// title:"class",start_time:"8:00AM",end_time:"8:50AM",credits:#,user_id:#
		var arrayColumns = Object.keys(Json);
		var arrayValues = Object.values(Json);
		var statement = "insert into commitments ("
		for(var i = 0; i<arrayColumns.length;i++){
			if(i == arrayColumns.length-1)
			{
				statement +=arrayColumns[i]+ ") values (";
				break;
			}
			statement += arrayColumns[i] + ", ";
		}
		for(var i = 0; i<arrayValues.length;i++){
			switch(i){
				case arrayValues.length-1:
					statement += arrayValues[i]+ ");";
					break;
				case arrayValues.length-2:
					statement+= arrayValues[i]+ ", "
					break;
				default:
					statement+= "'"+arrayValues[i]+"'" + ", ";
					break;
			}
		}
		return statement;
	}
	
	mainScheduledata(Json){
		// Json format 
		// monday:"########",tuesday:"######",wednesday:"#####",thursday:"######",friday:"######"
		var arrayColumns = Object.keys(Json);
		var arrayValues = Object.values(Json);
		var statement = "insert into main_schedule ("
		for(var i = 0; i<arrayColumns.length;i++){
			if(i == arrayColumns.length-1)
			{
				statement +=arrayColumns[i]+ ") values (";
				break;
			}
			statement += arrayColumns[i] + ", ";
		}
		for(var i = 0; i<arrayValues.length;i++){
			switch(i){
				case arrayValues.length-1:
					statement += "'" +arrayValues[i]+"'" +");";
					break;
				default:
					statement+= "'"+arrayValues[i]+"'" + ", ";
					break;
			}
		}
		return statement;
	}

	
}
